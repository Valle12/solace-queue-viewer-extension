name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "What version part do you want to change?"
        required: true
        type: choice
        default: "patch"
        options:
          - major
          - minor
          - patch

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create version branch
        run: git checkout -b version

      - name: Bump version
        uses: phips28/gh-action-bump-version@v11.0.7
        with:
          version-type: ${{ inputs.version }}
          skip-tag: true
          commit-message: "Bump ${{ inputs.version }} version"
          bump-policy: "ignore"
          target-branch: "version"

      - name: PR to main
        run: gh pr create -B main -H version -t "Bump version" -b "New version" --no-maintainer-edit

      - name: Merge PR
        run: gh pr merge version -d -m

  create-zip:
    runs-on: ubuntu-latest
    needs: update-version
    outputs:
      version: ${{ steps.extract-version.outputs.VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build project
        run: bun run build

      - name: Extract version
        id: extract-version
        run: |
          echo VERSION=$(cat package.json \
                    | grep version \
                    | head -1 \
                    | awk -F: '{ print $2 }' \
                    | sed 's/[\", ]//g') >> $GITHUB_OUTPUT

      - name: Create zip file
        run: |
          cd dist
          zip -r ../sqve-v${{ steps.extract-version.outputs.VERSION }}.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: sqve-v${{ steps.extract-version.outputs.VERSION }}.zip
          if-no-files-found: error
          overwrite: true
          name: sqve-v${{ steps.extract-version.outputs.VERSION }}.zip

  create-release:
    runs-on: ubuntu-latest
    needs: create-zip
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sqve-v${{ needs.create-zip.outputs.version }}.zip
          path: .

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: sqve-v${{ needs.create-zip.outputs.version }}.zip
          name: SQVE v${{ needs.create-zip.outputs.version }}
          tag_name: v${{ needs.create-zip.outputs.version }}
          fail_on_unmatched_files: true
          generate_release_notes: true
